generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Room {
  code      String   @id
  createdAt DateTime @default(now())
  status    String   @default("lobby")
  players   Player[]
  frames    Frame[]
  guesses   Guess[]
  difficulty String   @default("normal")
  durationMinutes Int @default(10)
  guessWindowSeconds Int @default(20)
  targetFrameCount Int @default(30)
  roundStartedAt DateTime?
  frameStartedAt DateTime?
  currentFrameIndex Int @default(0)
}

model Player {
  id        String   @id
  name      String
  role      String
  joinedAt  DateTime @default(now())
  roomCode  String
  sessionToken String? @unique
  score     Int      @default(0)
  room      Room     @relation(fields: [roomCode], references: [code], onDelete: Cascade)
  guesses   Guess[]

  @@index([roomCode])
}

model Frame {
  id        String   @id
  url       String
  answer    String
  addedBy   String
  createdAt DateTime @default(now())
  order     Int
  roomCode  String
  room      Room     @relation(fields: [roomCode], references: [code], onDelete: Cascade)
  guesses   Guess[]

  @@index([roomCode])
  @@unique([roomCode, order])
}

model Guess {
  id        String   @id @default(cuid())
  roomCode  String
  frameId   String
  playerId  String
  answer    String
  isCorrect Boolean
  awardedPoints Int @default(0)
  submittedAt DateTime @default(now())

  room   Room   @relation(fields: [roomCode], references: [code], onDelete: Cascade)
  frame  Frame  @relation(fields: [frameId], references: [id], onDelete: Cascade)
  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@index([roomCode, frameId])
  @@index([playerId, frameId])
}
